name: Python CI/CD

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build python package
      run: python -m build
  
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        if [ -f requirements.txt ]; then pip install -f requirements.txt; fi
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    test:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest
          if [ -f requirements.txt ]; then pip install -f requirements.txt; fi
      - name: Run application unit tests
        run: echo 'Running tests...' # After we create the tests we can run here.
    
    deploy-staging:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Clean directory and prepare setup file
        run: |
          rm -rf dist/ clighter.egg-info
          python ./.env/prepare-setup.py
      - name: Build the package
        run: |
          python -m build
      - name: Publish package to testpypi
        run: python -m twine upload -u '__token__' -p '${{ secrets.TESTPYPI_API_TOKEN }}' --repository testpypi dist/*

    deploy-prod:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Clean directory
        run: |
          rm -rf dist/ clighter.egg-info
      - name: Build the package
        run: |
          python -m build
      - name: Publish package to pypi
        run: python -m twine upload -u '__token__' -p '${{ secrets.PYPI_API_TOKEN }}' --repository pypi dist/*
      
